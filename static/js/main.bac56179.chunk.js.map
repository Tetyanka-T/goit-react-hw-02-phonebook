{"version":3,"sources":["components/Container/Container.module.css","components/Form/Form.module.css","components/Container/Container.jsx","components/Form/Form.jsx","components/Contact/Contacts.jsx","components/Filter.jsx","App.jsx","index.js","components/Contact/Contact.module.css"],"names":["module","exports","Container","children","className","s","container","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","input","type","onChange","pattern","title","required","button","Component","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","App","filter","addContact","task","contact","includes","alert","length","nanoid","prevState","deleteContact","contactId","changeFilter","showVisibleContact","normalizedFilter","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bac56179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Bbc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__sZYLW\",\"label\":\"Form_label__B3-D5\",\"input\":\"Form_input__GNb_2\",\"button\":\"Form_button__2MwuZ\"};","import s from 'components/Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <section className={s.container}>{children}</section>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport s from 'components/Form/Form.module.css';\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/Contact/Contact.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.item} key={id}>\r\n          {name + ': ' + number}\r\n          <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Container from './components/Container/Container';\nimport Form from './components/Form/Form';\nimport ContactList from 'components/Contact/Contacts';\nimport Filter from 'components/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = task => {\n    const searchSameName = this.state.contacts\n      .map(contact => contact.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      const contact = {\n        ...task,\n        id: nanoid(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  showVisibleContact = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.showVisibleContact();\n\n    return (\n      <div>\n        <Container>\n          <h1>Phonebook</h1>\n          <Form onSubmit={this.addContact} />\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__27nUF\",\"item\":\"Contact_item__unO0A\",\"button\":\"Contact_button__2X3uu\"};"],"sourceRoot":""}